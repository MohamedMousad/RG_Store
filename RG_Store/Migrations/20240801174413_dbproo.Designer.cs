// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pro.Models;

#nullable disable

namespace Pro.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240801174413_dbproo")]
    partial class dbproo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pro.Models.Admin", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("adminemail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adminpassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Pro.Models.Item", b =>
                {
                    b.Property<int>("itemid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("itemid"));

                    b.Property<string>("itemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("itemPrice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("itemid");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Pro.Models.Order", b =>
                {
                    b.Property<int>("orderid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("orderid"));

                    b.Property<int>("itemid")
                        .HasColumnType("int");

                    b.Property<string>("orderCost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("orderDeliveryDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("orederDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("orderid");

                    b.HasIndex("itemid");

                    b.HasIndex("userid");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Pro.Models.User", b =>
                {
                    b.Property<int>("userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userid"));

                    b.Property<string>("useraddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usergender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Pro.Models.Userlogin", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("useremail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userpassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Pro.Models.Order", b =>
                {
                    b.HasOne("Pro.Models.Item", "Items")
                        .WithMany("Orders")
                        .HasForeignKey("itemid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pro.Models.User", "Users")
                        .WithMany("Orders")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Items");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Pro.Models.Item", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Pro.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
